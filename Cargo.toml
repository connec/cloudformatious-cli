[package]
name = "cloudformatious-cli"
version = "0.6.1"
authors = ["Chris Connelly <chris@connec.co.uk>"]
license = "MIT"
edition = "2018"
description = "A CloudFormation CLI that won't make you cry"
repository = "https://github.com/connec/cloudformatious-cli"

[[bin]]
name = "cloudformatious"
path = "src/main.rs"

[dependencies]
async_zip = { version = "0.0.9", default-features = false, features = ["deflate"] }
aws-config = "1.1.10"
aws-credential-types = "1.2.0"
aws-sdk-s3 = "1.22.0"
aws-types = "1.1.9"
aws_sso_flow = { version = "0.5.0", default-features = false, features = ["aws-sdk", "rustls"] }
base64 = "0.13.0"
chrono = { version = "0.4.22", default-features = false }
clap = { version = "4.0.18", features = ["derive", "env"] }
clap_complete = "4.0.3"
cloudformatious = "0.7.0"
colored = "2.0.0"
futures-util = "0.3.24"
hyper = { version = "0.14.20", features = ["stream"] }
md5 = "0.7.0"
serde_json = "1.0.85"
serde_yaml = "0.9.13"
tempfile = "3.3.0"
tokio = { version = "1.21.0", features = ["fs", "io-std", "io-util", "macros", "rt-multi-thread"] }
tokio-util = { version = "0.7.4", features = ["codec"] }

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# Skip checking whether the specified configuration files are up to date
allow-dirty = ["ci"]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.13.2"
# CI backends to support
ci = ["github"]
# The installers to generate for each app
installers = ["shell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "aarch64-unknown-linux-gnu", "aarch64-unknown-linux-musl", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl"]
# Publish jobs to run in CI
pr-run-mode = "plan"
# Whether to install an updater program
install-updater = false
# Publish jobs to run in CI
publish-jobs = ["./cargo-publish"]
# Whether to publish prereleases to package managers
publish-prereleases = true

[workspace.metadata.dist.dependencies.apt]
gcc-aarch64-linux-gnu = { version = '*', targets = ["aarch64-unknown-linux-gnu", "aarch64-unknown-linux-musl"] }
